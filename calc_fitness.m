function [fitness, error, cost] = calc_fitness(pop_data, cons, chrom_size)
lambda = pop_data(:, chrom_size+1);                             
for i = 1;length(lambda)                                        %Loop to limit the values of lambda.
    if lambda(i) < cons.lambda_min
        lambda(i) = cons.lambda_min;
    elseif lambda(i) > cons.lambda_max
        lambda(i) = cons.lambda_max;
    end
end
power_gen = (lambda - cons.B)./(2*cons.A);                      %Power generated by each generator.
tot_power = sum(power_gen, 2);                                  %Total power generated by 3 generators.
error = abs(cons.Pd - tot_power);                               %Error in demand and generation for each value of lambda.
fitness = 1./(1 + error);                                       %Fitness function for finding the minimum.
cost = sum((power_gen.^2).*cons.A + (power_gen.*cons.B), 2);    %Total cost of power generation for each value of lambda.
end

